@using System.Globalization
@model CGI.Reflex.Web.Models.Pickers.TechnologyHierarchy

<div class="modal-header">
	<a class="close" data-dismiss="modal">×</a>
	<h3>Sélectionner des technologies</h3>
</div>

<form id="formModalAddTechno" action="@Model.PostUrl" method="POST">
	<div class="row-fluid">
		<div class="span6" style=" border-right: 1px solid #ddd; background-color: whiteSmoke;">
			<div class="form-search" style="padding: 5px 10px 5px 10px;">
				<div class="row-fluid">
					<div class="span6">
						<div class="input-prepend">
							<span class="add-on"><i class="icon-search"></i></span>
							<input id="searchBoxTechno" type="text" style="width: 170px;margin-left: -4px;" data-select-on-focus="true">
						</div>
					</div>
					 <div class="span6" style="text-align: right;">
						@Html.DropDownList("filterTechnoTypes", new SelectList(@Model.TechnologyTypes, "Id", "Name"), "")
					</div>
				</div>
			</div>
			<div class="row-fluid">
				<div class="span12" style="height: 349px; overflow: auto; overflow-y: scroll;">
                    <div id="technoTree">
                    </div>
				</div>
			</div>
		</div>
		<div id="technoDetails" class="span6" style="margin-left: 0;"></div>
	</div>

	<div class="modal-footer">
		<a id="technoModalBtnOk" class="btn btn-primary" data-submit-form="true">OK</a>
		<a class="btn" data-dismiss="modal">Annuler</a>
	</div>
</form>

<script type="text/javascript">

	// Global variables for search.
	var valText = $.trim($('#searchBoxTechno').val());
	var valType = $('#filterTechnoTypes').val();

	$.expr[':'].jstree_custom_search = function(a){
        var liNode = $(a).closest('li');
		if (valType === '') {
			if ((valText === '') || (liNode.data("fullname").search(new RegExp(valText, "i")) != -1)) {
				return true;
			} else {
				return false;
			}
		} else {
			 if (liNode.data('technoType') === valType) {
				if ((valText === '') || (liNode.data("fullname").search(new RegExp(valText, "i")) != -1)) {
					return true;
				} else {
					return false;
				}
			 } else {
				return false;
			 }
		}
	};

	$("#technoTree").jstree({
		plugins : ["themes", "json_data", "ui", "search", "checkbox"],
		themes : {
			url: '@Url.Content("~/Content/css/jstree.css")'
		},
		ui : {
			select_limit: 1
		},
		checkbox : {
			real_checkboxes: true
		},
        search : {
			show_only_matches: true,
			search_method: "jstree_custom_search",
            ajax: {
                url : "@Url.Action("TechnologiesSearch")",
                data : function() {  
                    return { search: $('#searchBoxTechno').val(), technoType: $('#filterTechnoTypes').val() };
                }
            }
		},
        "json_data" : {
            "data" : [
                {
                    "attr" : { "id" : "techno-0", "class" : "no_checkbox" },
                    "data" : "Technologies",
                    "metadata" : { "id" : "0", "fullname" : "", "technoType" : "" },
                    "state" : "open",
                    "children" : [
                        @foreach(var techno in Model.RootTechnologies)
                        {
                            <text>
                            {
                                "attr" : { "id" : "techno-@techno.Id", "class" : "@(( (Model.SelectionMode == CGI.Reflex.Web.Models.Pickers.SelectionMode.Multiple  || Model.SelectionMode ==  CGI.Reflex.Web.Models.Pickers.SelectionMode.SingleLeafOnly) && techno.HasChildren()) ? "no_checkbox" : "")" },
                                "data" : { "title" : "@Html.Raw(techno.Name)" },
                                "metadata" : { "id" : "@techno.Id", "fullname" : "@techno.FullName", "technoType" : "@(techno.TechnologyType != null ? techno.TechnologyType.Id.ToString(CultureInfo.InvariantCulture) : "")" },
                                "state" : "@(techno.HasChildren() ? "closed" : "")"
                            }
                            @if (techno != Model.RootTechnologies.Last())
                            {
                                @:,
                            }
                            </text>
                        }
                    ]
                }
            ],
            "ajax" : {
                "url" : "@Url.Action("TechnologiesTreeData")",
                "data" : function(n) {  
                    return { rootId : n.data("id"), selectionMode : "@Model.SelectionMode.ToString()" };
                }
            }
        }
	})
	.bind("loaded.jstree", function (event, data) {
		data.inst.select_node('#techno-0', true);
	})
	.bind("select_node.jstree", function (event, data) {
		var targetId = data.rslt.obj.data('id');
		if(targetId === '0') {
			$("#technoDetails").html('');
		} else {
			$("#technoDetails").load('@Url.Action("TechnologiesDetails")/' + targetId);
		}
		data.inst.open_node('#techno-' + targetId);
	});

    @if(Model.SelectionMode == CGI.Reflex.Web.Models.Pickers.SelectionMode.Single || Model.SelectionMode == CGI.Reflex.Web.Models.Pickers.SelectionMode.SingleLeafOnly)
    {
        <text>
            var inCheck = false;
            $("#technoTree").bind('change_state.jstree', function(event, data) {
                if(!inCheck) {
                    inCheck = true;
                    data.inst.uncheck_all();
                    data.inst.check_node(data.args);
                    inCheck = false;
                }
            });
        </text>
    }

	var searchTechno = function () {
		valText = $.trim($('#searchBoxTechno').val());
		valType = $('#filterTechnoTypes').val();
		if(valText === "" && valType === "") {
			$("#technoTree").jstree("search", "");
		} else {
			$("#technoTree").jstree("search", "a"); // Dumb value to perform search
		}
	};

	$('#filterTechnoTypes').on('change', searchTechno);
	$('#searchBoxTechno').on('keyup', function() { delay(searchTechno, 500); });

	@if(!string.IsNullOrEmpty(Model.AddFunctionName))
	{
        if(Model.SelectionMode == CGI.Reflex.Web.Models.Pickers.SelectionMode.Single || Model.SelectionMode == CGI.Reflex.Web.Models.Pickers.SelectionMode.SingleLeafOnly)
        {
		    <text>
                $('#formModalAddTechno').on('submit', function(event) {
                    var checked = $("#technoTree li.jstree-checked:not(.no_checkbox)");
                    if(checked.length > 0) {
                        var liNode = $(checked);
                        @Html.Raw(string.Format("{0}(liNode.data('id'), liNode.data('fullname'));", Model.AddFunctionName))
                    } else {
                        @Html.Raw(string.Format("{0}(null, null);", Model.AddFunctionName))
                    }
				    $("#largeModal").modal('hide');
				    event.preventDefault();
			    });
            </text>
        }
        else
        {
		    <text>
			    $('#formModalAddTechno').on('submit', function(event) {
				    var checkedIds = [];
				    $("#technoTree").jstree("get_checked", null, true).each(function() {
					    var liNode = $(this);
					    if(!liNode.hasClass('no_checkbox'))
					        checkedIds.push(liNode.data('id'));
				    });
                    if(checkedIds.length > 0)
                        @Html.Raw(string.Format("{0}(checkedIds);", Model.AddFunctionName))
				    $("#largeModal").modal('hide');
				    event.preventDefault();
			    });
		    </text>
        }
	}
</script>