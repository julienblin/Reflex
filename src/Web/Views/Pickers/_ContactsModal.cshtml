@model CGI.Reflex.Web.Models.Pickers.ContactsList

@using System.Globalization
@using CGI.Reflex.Core.Entities
@using CGI.Reflex.Core.Queries

<div class="modal-header">
    <a class="close" data-dismiss="modal">×</a>
    <h3>Sélectionner des contacts
        @if (!String.IsNullOrEmpty(Model.ReturnUrl) && IsActionAllowed("Create", "Contacts", "CGI.Reflex.Web.Areas.Organizations.Controllers"))
        {
            <a href="@Url.Action("Create", "Contacts", new { area = "Organizations", returnUrl = Model.ReturnUrl, associateWithApplicationId = Model.ApplicationId })" class="btn btn-mini btn-success" rel="tooltip" title="Ajouter un nouveau contact"><i class="icon-plus-sign icon-white"></i></a>
        }
    </h3>
</div>
<form id="formModalContact" action="@Model.PostUrl">
    <div class="row-fluid">
        <div class="span6" style=" border-right: 1px solid #ddd; background-color: whiteSmoke;">
            <div class="form-search" style="padding: 5px 10px 5px 10px;">
                <div class="row-fluid">
                    <div class="span6">
                        <div class="input-prepend">
                            <span class="add-on"><i class="icon-search"></i></span>
                            <input id="searchBoxContacts" type="text" style="width: 170px; margin-left: -4px;" data-select-on-focus="true">
                        </div>
                    </div>
                    <div class="span6" style="text-align: right;">
                        @Html.DropDownList("filterContactTypes", new SelectList(new List<DomainValue>(new DomainValueQuery { Category = DomainValueCategory.ContactType }.OrderBy(dvc => dvc.DisplayOrder).Cacheable().List()), "Id", "Name"), "")
                    </div>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span12" style="height: 349px; overflow-y: scroll;">
                    <table id="tableContacts" class="table table-striped table-condensed ie-overflow-fix" style="margin-bottom: 0;">
                        <tbody>
                            @foreach (var contact in Model.Contacts)
                            {
                                <tr data-contact-type="@(contact.Type != null ? contact.Type.Id.ToString(CultureInfo.InvariantCulture) : "")">
                                    <td style="width: 20px;"><input id="contacts-@contact.Id" name="contacts" value="@contact.Id" type="checkbox" data-contact-name="@contact.FullName"></td>
                                    <td data-contact-id="@contact.Id" style="cursor: pointer"><a data-contact-id="@contact.Id">@contact.FullName</a></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div id="contactBox" class="span6" style="margin-left: 0;height: 372px; overflow: auto;"></div>
    </div>
    <div class="modal-footer">
        <a class="btn btn-primary" data-submit-form="true">OK</a>
        <a class="btn" data-dismiss="modal">Annuler</a>
    </div>
</form>

<script type="text/javascript">
    var searchContacts = function () {
        var valType = $.trim($('#filterContactTypes').val());
        var valText = $.trim($('#searchBoxContacts').val());
        $('#tableContacts tr').each(function () {
            var tr = $(this);
            if (valType === '') {
                if ((valText === '') || (tr.text().search(new RegExp(valText, "i")) != -1)) {
                    tr.show();
                } else {
                    tr.hide();
                }
            } else {
                if (tr.attr('data-contact-type') === valType) {
                    if ((valText === '') || (tr.text().search(new RegExp(valText, "i")) != -1)) {
                        tr.show();
                    } else {
                        tr.hide();
                    }
                } else {
                    tr.hide();
                }
            }
        });
    };

    $('#filterContactTypes').on('change', searchContacts);
    $('#searchBoxContacts').on('keyup', searchContacts);

    $('[data-contact-id]').on('click', function () {
        $.ajax({
            url: '@Url.Action("ContactDetails", "Pickers", new { area = "" })',
            data: {id: $(this).attr('data-contact-id')},
            success: function (data) {
                $('#contactBox').html(data);
            }
        });
        return false;
    });

    $('#searchBoxContacts').focus();

    @if (Model.SelectionMode == CGI.Reflex.Web.Models.Pickers.SelectionMode.Single)
    {
        <text>
            $('#tableContacts :checkbox').on('change', function(event) {
                if($(this).prop('checked')) {
                    $('#tableContacts :checkbox').prop('checked', false);
                    $(this).prop('checked', true);
                }
            });
        </text>
    }

    @if (!string.IsNullOrEmpty(Model.AddFunctionName))
    {
        if (Model.SelectionMode == CGI.Reflex.Web.Models.Pickers.SelectionMode.Single)
        {
		    <text>
			    $('#formModalContact').on('submit', function(event) {
				    var checked = $("#tableContacts :checked");
                    if(checked.length > 0)
                    {
                        @Html.Raw(string.Format("{0}($(checked[0]).val(), $(checked[0]).attr('data-contact-name'));", Model.AddFunctionName))
                    } else {
                        @Html.Raw(string.Format("{0}(null, null);", Model.AddFunctionName))
                    }
				    $("#largeModal").modal('hide');
				    event.preventDefault();
			    });
		    </text>
        }
        else
        {
            <text>
			    $('#formModalContact').on('submit', function(event) {
				    var checkedIds = [];
				    $("#tableContacts :checked ").each(function() {
                        checkedIds.push($(this).val());
				    });
                    if(checkedIds.length > 0)
                        @Html.Raw(string.Format("{0}(checkedIds);", Model.AddFunctionName))
				    $("#largeModal").modal('hide');
				    event.preventDefault();
			    });
		    </text>
        }
	}

</script>